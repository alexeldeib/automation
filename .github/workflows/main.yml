# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule: 
    - cron: '*/5 * * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: echo time
      run:  |
        set -euo pipefail
        sudo apt install -y gettext-base moreutils 
        export DATETIME="$(date -Iseconds)"
        envsubst < template.json > temp.json
        cat temp.json
        jq . temp.json
        echo "validating data"
        jq . data.json
        jq -s '.[0] + [.[1]]' data.json temp.json | sponge data.json
        rm temp.json
        echo "final data"
        cat data.json
    # Make changes to pull request here
    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.PAT }}

    - name: Enable Pull Request Automerge
      if: steps.cpr.outputs.pull-request-operation == 'created'
      uses: peter-evans/enable-pull-request-automerge@v1
      with:
        token: ${{ secrets.PAT }}
        pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
        merge-method: squash
      # The type of runner that the job will run on
    
    - name: Auto approve
      if: steps.cpr.outputs.pull-request-operation == 'created'
      uses: juliangruber/approve-pull-request-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        number: ${{ steps.cpr.outputs.pull-request-number }}
